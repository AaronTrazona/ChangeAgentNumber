#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanyPhones
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Drumbi")]
	public partial class DrumbiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Company(tbl_Company instance);
    partial void Updatetbl_Company(tbl_Company instance);
    partial void Deletetbl_Company(tbl_Company instance);
    partial void Inserttbl_CompanyAgent(tbl_CompanyAgent instance);
    partial void Updatetbl_CompanyAgent(tbl_CompanyAgent instance);
    partial void Deletetbl_CompanyAgent(tbl_CompanyAgent instance);
    #endregion
		
		public DrumbiDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DrumbiConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DrumbiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DrumbiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DrumbiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DrumbiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Company> tbl_Companies
		{
			get
			{
				return this.GetTable<tbl_Company>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CompanyAgent> tbl_CompanyAgents
		{
			get
			{
				return this.GetTable<tbl_CompanyAgent>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ChangeAgentPhoneNumber")]
		public ISingleResult<tbl_CompanyAgent> sp_ChangeAgentPhoneNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AgentID", DbType="Int")] System.Nullable<int> agentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="VarChar(100)")] string phoneNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), agentID, phoneNumber);
			return ((ISingleResult<tbl_CompanyAgent>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Company")]
	public partial class tbl_Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private string _CompanyGUID;
		
		private string _CompanyName;
		
		private string _CompanyIcon;
		
		private string _CompanyKey;
		
		private string _CompanyBrandingTitle;
		
		private string _CompanyBanner;
		
		private string _CompanyDescription;
		
		private System.Nullable<int> _CompanyParent;
		
		private string _CompanyLogin;
		
		private string _CompanyReauthenticationLink;
		
		private System.Nullable<System.DateTime> _CompanyCreateDate;
		
		private EntitySet<tbl_CompanyAgent> _tbl_CompanyAgents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyGUIDChanging(string value);
    partial void OnCompanyGUIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyIconChanging(string value);
    partial void OnCompanyIconChanged();
    partial void OnCompanyKeyChanging(string value);
    partial void OnCompanyKeyChanged();
    partial void OnCompanyBrandingTitleChanging(string value);
    partial void OnCompanyBrandingTitleChanged();
    partial void OnCompanyBannerChanging(string value);
    partial void OnCompanyBannerChanged();
    partial void OnCompanyDescriptionChanging(string value);
    partial void OnCompanyDescriptionChanged();
    partial void OnCompanyParentChanging(System.Nullable<int> value);
    partial void OnCompanyParentChanged();
    partial void OnCompanyLoginChanging(string value);
    partial void OnCompanyLoginChanged();
    partial void OnCompanyReauthenticationLinkChanging(string value);
    partial void OnCompanyReauthenticationLinkChanged();
    partial void OnCompanyCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompanyCreateDateChanged();
    #endregion
		
		public tbl_Company()
		{
			this._tbl_CompanyAgents = new EntitySet<tbl_CompanyAgent>(new Action<tbl_CompanyAgent>(this.attach_tbl_CompanyAgents), new Action<tbl_CompanyAgent>(this.detach_tbl_CompanyAgents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyGUID", DbType="VarChar(50)")]
		public string CompanyGUID
		{
			get
			{
				return this._CompanyGUID;
			}
			set
			{
				if ((this._CompanyGUID != value))
				{
					this.OnCompanyGUIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyGUID = value;
					this.SendPropertyChanged("CompanyGUID");
					this.OnCompanyGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyIcon", DbType="VarChar(1000)")]
		public string CompanyIcon
		{
			get
			{
				return this._CompanyIcon;
			}
			set
			{
				if ((this._CompanyIcon != value))
				{
					this.OnCompanyIconChanging(value);
					this.SendPropertyChanging();
					this._CompanyIcon = value;
					this.SendPropertyChanged("CompanyIcon");
					this.OnCompanyIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyKey", DbType="VarChar(100)")]
		public string CompanyKey
		{
			get
			{
				return this._CompanyKey;
			}
			set
			{
				if ((this._CompanyKey != value))
				{
					this.OnCompanyKeyChanging(value);
					this.SendPropertyChanging();
					this._CompanyKey = value;
					this.SendPropertyChanged("CompanyKey");
					this.OnCompanyKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyBrandingTitle", DbType="VarChar(1000)")]
		public string CompanyBrandingTitle
		{
			get
			{
				return this._CompanyBrandingTitle;
			}
			set
			{
				if ((this._CompanyBrandingTitle != value))
				{
					this.OnCompanyBrandingTitleChanging(value);
					this.SendPropertyChanging();
					this._CompanyBrandingTitle = value;
					this.SendPropertyChanged("CompanyBrandingTitle");
					this.OnCompanyBrandingTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyBanner", DbType="VarChar(1000)")]
		public string CompanyBanner
		{
			get
			{
				return this._CompanyBanner;
			}
			set
			{
				if ((this._CompanyBanner != value))
				{
					this.OnCompanyBannerChanging(value);
					this.SendPropertyChanging();
					this._CompanyBanner = value;
					this.SendPropertyChanged("CompanyBanner");
					this.OnCompanyBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyDescription", DbType="VarChar(1000)")]
		public string CompanyDescription
		{
			get
			{
				return this._CompanyDescription;
			}
			set
			{
				if ((this._CompanyDescription != value))
				{
					this.OnCompanyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CompanyDescription = value;
					this.SendPropertyChanged("CompanyDescription");
					this.OnCompanyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyParent", DbType="Int")]
		public System.Nullable<int> CompanyParent
		{
			get
			{
				return this._CompanyParent;
			}
			set
			{
				if ((this._CompanyParent != value))
				{
					this.OnCompanyParentChanging(value);
					this.SendPropertyChanging();
					this._CompanyParent = value;
					this.SendPropertyChanged("CompanyParent");
					this.OnCompanyParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogin", DbType="VarChar(1000)")]
		public string CompanyLogin
		{
			get
			{
				return this._CompanyLogin;
			}
			set
			{
				if ((this._CompanyLogin != value))
				{
					this.OnCompanyLoginChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogin = value;
					this.SendPropertyChanged("CompanyLogin");
					this.OnCompanyLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyReauthenticationLink", DbType="VarChar(1000)")]
		public string CompanyReauthenticationLink
		{
			get
			{
				return this._CompanyReauthenticationLink;
			}
			set
			{
				if ((this._CompanyReauthenticationLink != value))
				{
					this.OnCompanyReauthenticationLinkChanging(value);
					this.SendPropertyChanging();
					this._CompanyReauthenticationLink = value;
					this.SendPropertyChanged("CompanyReauthenticationLink");
					this.OnCompanyReauthenticationLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompanyCreateDate
		{
			get
			{
				return this._CompanyCreateDate;
			}
			set
			{
				if ((this._CompanyCreateDate != value))
				{
					this.OnCompanyCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CompanyCreateDate = value;
					this.SendPropertyChanged("CompanyCreateDate");
					this.OnCompanyCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Company_tbl_CompanyAgent", Storage="_tbl_CompanyAgents", ThisKey="CompanyId", OtherKey="CompanyID")]
		public EntitySet<tbl_CompanyAgent> tbl_CompanyAgents
		{
			get
			{
				return this._tbl_CompanyAgents;
			}
			set
			{
				this._tbl_CompanyAgents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_CompanyAgents(tbl_CompanyAgent entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Company = this;
		}
		
		private void detach_tbl_CompanyAgents(tbl_CompanyAgent entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CompanyAgent")]
	public partial class tbl_CompanyAgent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgentID;
		
		private System.Nullable<int> _CompanyID;
		
		private string _UniqueID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _ProfilePicture;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Salt;
		
		private string _Phone;
		
		private string _Extension;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntityRef<tbl_Company> _tbl_Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgentIDChanging(int value);
    partial void OnAgentIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnUniqueIDChanging(string value);
    partial void OnUniqueIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnProfilePictureChanging(string value);
    partial void OnProfilePictureChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSaltChanging(string value);
    partial void OnSaltChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public tbl_CompanyAgent()
		{
			this._tbl_Company = default(EntityRef<tbl_Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AgentID
		{
			get
			{
				return this._AgentID;
			}
			set
			{
				if ((this._AgentID != value))
				{
					this.OnAgentIDChanging(value);
					this.SendPropertyChanging();
					this._AgentID = value;
					this.SendPropertyChanged("AgentID");
					this.OnAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._tbl_Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="VarChar(100)")]
		public string UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePicture", DbType="VarChar(MAX)")]
		public string ProfilePicture
		{
			get
			{
				return this._ProfilePicture;
			}
			set
			{
				if ((this._ProfilePicture != value))
				{
					this.OnProfilePictureChanging(value);
					this.SendPropertyChanging();
					this._ProfilePicture = value;
					this.SendPropertyChanged("ProfilePicture");
					this.OnProfilePictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(1000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salt", DbType="VarChar(1000)")]
		public string Salt
		{
			get
			{
				return this._Salt;
			}
			set
			{
				if ((this._Salt != value))
				{
					this.OnSaltChanging(value);
					this.SendPropertyChanging();
					this._Salt = value;
					this.SendPropertyChanged("Salt");
					this.OnSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="VarChar(100)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Company_tbl_CompanyAgent", Storage="_tbl_Company", ThisKey="CompanyID", OtherKey="CompanyId", IsForeignKey=true)]
		public tbl_Company tbl_Company
		{
			get
			{
				return this._tbl_Company.Entity;
			}
			set
			{
				tbl_Company previousValue = this._tbl_Company.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Company.Entity = null;
						previousValue.tbl_CompanyAgents.Remove(this);
					}
					this._tbl_Company.Entity = value;
					if ((value != null))
					{
						value.tbl_CompanyAgents.Add(this);
						this._CompanyID = value.CompanyId;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
